// @include gutters(10px)
// @include gutters(10px, all)
// @include gutters(10px, 20px)
// @include gutters(10px, 20px, all)

@mixin gutter-ruleset($x, $y) {

        $x: $x / 2;
        
        margin: 0 (-$x) (-$y);

        & > * {
            margin-bottom: $y;
            padding: 0 $x;
        }
}

@mixin gutters($args...) {

    $x: 0;
    $y: 0;
    $all: false;

    @if length($args) == 0 or type-of(nth($args, 1)) != number {
        @error "Invalid usage of the gutters() mixin.";
    }

    @if length($args) == 1 {
        $x: nth($args, 1);
        $y: $x;
    } @else if length($args) == 2 and type-of(nth($args, 2)) == string {
        $x: nth($args, 1);
        $y: $x;
        $all: true;
    } @else if length($args) == 2 and type-of(nth($args, 2)) == number {
        $x: nth($args, 1);
        $y: nth($args, 2);
    } @else if length($args) == 3 and type-of(nth($args, 3)) == string {
        $x: nth($args, 1);
        $y: nth($args, 2);
        $all: true;
    } @else {
        @error "Invalid usage of the gutters() mixin.";
    }

    @if $all {
        &, & .#{$grid-selector} {
            @include gutter-ruleset($x, $y);
        }
    } @else {
        @include gutter-ruleset($x, $y);
    }

}